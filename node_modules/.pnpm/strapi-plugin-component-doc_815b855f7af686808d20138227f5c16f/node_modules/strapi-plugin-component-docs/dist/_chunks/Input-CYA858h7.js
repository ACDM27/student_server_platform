"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const reactIntl = require("react-intl");
const designSystem = require("@strapi/design-system");
const icons = require("@strapi/icons");
const styled = require("styled-components");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const React__default = /* @__PURE__ */ _interopDefault(React);
const styled__default = /* @__PURE__ */ _interopDefault(styled);
const ModalContent = styled__default.default(designSystem.Modal.Content)`
  width: 100vw !important;
  height: 100vh !important;
  max-width: 100% !important;
  max-height: 100% !important;
`;
const Input = React__default.default.forwardRef(
  ({ attribute }, ref) => {
    const { formatMessage } = reactIntl.useIntl();
    const effectiveValue = attribute?.options?.url || attribute?.options?.defaultValue || "";
    const disableIframe = attribute?.options?.disableIframe;
    if (!effectiveValue) return null;
    const buttonLabel = formatMessage({
      id: "component-docs.view-docs",
      defaultMessage: "View Documentation"
    });
    return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Box, { style: { width: "100%" }, children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Flex, { justifyContent: "flex-end", paddingTop: 2, children: !disableIframe ? /* @__PURE__ */ jsxRuntime.jsxs(designSystem.Modal.Root, { children: [
      /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Trigger, { children: /* @__PURE__ */ jsxRuntime.jsx(
        designSystem.Button,
        {
          variant: "tertiary",
          startIcon: /* @__PURE__ */ jsxRuntime.jsx(icons.ExternalLink, {}),
          ref,
          children: buttonLabel
        }
      ) }),
      /* @__PURE__ */ jsxRuntime.jsxs(ModalContent, { className: "docs-modal-content", children: [
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Header, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Title, { children: formatMessage({
          id: "component-docs.modal-title",
          defaultMessage: "Component Documentation"
        }) }) }),
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Body, { children: /* @__PURE__ */ jsxRuntime.jsx(
          designSystem.Box,
          {
            padding: 4,
            background: "neutral100",
            hasRadius: true,
            style: { height: "80vh" },
            children: /* @__PURE__ */ jsxRuntime.jsx(
              "iframe",
              {
                src: effectiveValue,
                title: "Component Documentation",
                width: "100%",
                height: "100%",
                style: { border: "none" }
              }
            )
          }
        ) }),
        /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Footer, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Modal.Close, { children: /* @__PURE__ */ jsxRuntime.jsx(designSystem.Button, { variant: "tertiary", children: formatMessage({
          id: "component-docs.modal-close",
          defaultMessage: "Close"
        }) }) }) })
      ] })
    ] }) : /* @__PURE__ */ jsxRuntime.jsx(
      designSystem.Link,
      {
        href: effectiveValue,
        target: "_blank",
        rel: "noopener noreferrer",
        children: /* @__PURE__ */ jsxRuntime.jsx(
          designSystem.Button,
          {
            variant: "tertiary",
            startIcon: /* @__PURE__ */ jsxRuntime.jsx(icons.ExternalLink, {}),
            ref,
            children: buttonLabel
          }
        )
      }
    ) }) }) });
  }
);
Input.displayName = "DocsLinkInput";
exports.default = Input;

import { jsx, Fragment, jsxs } from "react/jsx-runtime";
import React from "react";
import { useIntl } from "react-intl";
import { Box, Flex, Modal, Button, Link } from "@strapi/design-system";
import { ExternalLink } from "@strapi/icons";
import styled from "styled-components";
const ModalContent = styled(Modal.Content)`
  width: 100vw !important;
  height: 100vh !important;
  max-width: 100% !important;
  max-height: 100% !important;
`;
const Input = React.forwardRef(
  ({ attribute }, ref) => {
    const { formatMessage } = useIntl();
    const effectiveValue = attribute?.options?.url || attribute?.options?.defaultValue || "";
    const disableIframe = attribute?.options?.disableIframe;
    if (!effectiveValue) return null;
    const buttonLabel = formatMessage({
      id: "component-docs.view-docs",
      defaultMessage: "View Documentation"
    });
    return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(Box, { style: { width: "100%" }, children: /* @__PURE__ */ jsx(Flex, { justifyContent: "flex-end", paddingTop: 2, children: !disableIframe ? /* @__PURE__ */ jsxs(Modal.Root, { children: [
      /* @__PURE__ */ jsx(Modal.Trigger, { children: /* @__PURE__ */ jsx(
        Button,
        {
          variant: "tertiary",
          startIcon: /* @__PURE__ */ jsx(ExternalLink, {}),
          ref,
          children: buttonLabel
        }
      ) }),
      /* @__PURE__ */ jsxs(ModalContent, { className: "docs-modal-content", children: [
        /* @__PURE__ */ jsx(Modal.Header, { children: /* @__PURE__ */ jsx(Modal.Title, { children: formatMessage({
          id: "component-docs.modal-title",
          defaultMessage: "Component Documentation"
        }) }) }),
        /* @__PURE__ */ jsx(Modal.Body, { children: /* @__PURE__ */ jsx(
          Box,
          {
            padding: 4,
            background: "neutral100",
            hasRadius: true,
            style: { height: "80vh" },
            children: /* @__PURE__ */ jsx(
              "iframe",
              {
                src: effectiveValue,
                title: "Component Documentation",
                width: "100%",
                height: "100%",
                style: { border: "none" }
              }
            )
          }
        ) }),
        /* @__PURE__ */ jsx(Modal.Footer, { children: /* @__PURE__ */ jsx(Modal.Close, { children: /* @__PURE__ */ jsx(Button, { variant: "tertiary", children: formatMessage({
          id: "component-docs.modal-close",
          defaultMessage: "Close"
        }) }) }) })
      ] })
    ] }) : /* @__PURE__ */ jsx(
      Link,
      {
        href: effectiveValue,
        target: "_blank",
        rel: "noopener noreferrer",
        children: /* @__PURE__ */ jsx(
          Button,
          {
            variant: "tertiary",
            startIcon: /* @__PURE__ */ jsx(ExternalLink, {}),
            ref,
            children: buttonLabel
          }
        )
      }
    ) }) }) });
  }
);
Input.displayName = "DocsLinkInput";
export {
  Input as default
};

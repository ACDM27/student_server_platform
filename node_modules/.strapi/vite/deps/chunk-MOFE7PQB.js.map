{
  "version": 3,
  "sources": ["../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/useIntl.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/injectIntl.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/utils.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/createFormattedComponent.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/provider.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/createIntl.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/relative.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/plural.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/message.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/src/components/dateTimeRange.js", "../../../.pnpm/react-intl@6.6.2_react@18.3.1_typescript@5.8.3/node_modules/react-intl/lib/index.js"],
  "sourcesContent": ["import * as React from 'react';\r\nimport { Context } from './injectIntl';\r\nimport { invariantIntlContext } from '../utils';\r\nexport default function useIntl() {\r\n    var intl = React.useContext(Context);\r\n    invariantIntlContext(intl);\r\n    return intl;\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport * as React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { invariantIntlContext } from '../utils';\r\nfunction getDisplayName(Component) {\r\n    return Component.displayName || Component.name || 'Component';\r\n}\r\n// This is primarily dealing with packaging systems where multiple copies of react-intl\r\n// might exist\r\nvar IntlContext = typeof window !== 'undefined' && !window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__\r\n    ? window.__REACT_INTL_CONTEXT__ ||\r\n        (window.__REACT_INTL_CONTEXT__ = React.createContext(null))\r\n    : React.createContext(null);\r\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\r\nexport var Provider = IntlProvider;\r\nexport var Context = IntlContext;\r\nexport default function injectIntl(WrappedComponent, options) {\r\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\r\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\r\n        var _a;\r\n        if (enforceContext) {\r\n            invariantIntlContext(intl);\r\n        }\r\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\r\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\r\n    })); };\r\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\r\n    WithIntl.WrappedComponent = WrappedComponent;\r\n    if (forwardRef) {\r\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\r\n    }\r\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport * as React from 'react';\r\nimport { invariant } from '@formatjs/ecma402-abstract';\r\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\r\nexport function invariantIntlContext(intl) {\r\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\r\n        '<IntlProvider> needs to exist in the component ancestry.');\r\n}\r\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\r\n/**\r\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\r\n * argument `parts` through, assigning unique key to each part, to prevent\r\n * \"Each child in a list should have a unique \"key\"\" React error.\r\n * @param formatXMLElementFn\r\n */\r\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\r\n    return function (parts) {\r\n        // eslint-disable-next-line prefer-rest-params\r\n        return formatXMLElementFn(React.Children.toArray(parts));\r\n    };\r\n}\r\nexport function shallowEqual(objA, objB) {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n    if (!objA || !objB) {\r\n        return false;\r\n    }\r\n    var aKeys = Object.keys(objA);\r\n    var bKeys = Object.keys(objB);\r\n    var len = aKeys.length;\r\n    if (bKeys.length !== len) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < len; i++) {\r\n        var key = aKeys[i];\r\n        if (objA[key] !== objB[key] ||\r\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n", "import { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar DisplayName;\r\n(function (DisplayName) {\r\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\r\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\r\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\r\n    DisplayName[\"formatList\"] = \"FormattedList\";\r\n    // Note that this DisplayName is the locale display name, not to be confused with\r\n    // the name of the enum, which is for React component display name in dev tools.\r\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\r\n})(DisplayName || (DisplayName = {}));\r\nvar DisplayNameParts;\r\n(function (DisplayNameParts) {\r\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\r\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\r\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\r\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\r\n})(DisplayNameParts || (DisplayNameParts = {}));\r\nexport var FormattedNumberParts = function (props) {\r\n    var intl = useIntl();\r\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n    return children(intl.formatNumberToParts(value, formatProps));\r\n};\r\nFormattedNumberParts.displayName = 'FormattedNumberParts';\r\nexport var FormattedListParts = function (props) {\r\n    var intl = useIntl();\r\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n    return children(intl.formatListToParts(value, formatProps));\r\n};\r\nFormattedNumberParts.displayName = 'FormattedNumberParts';\r\nexport function createFormattedDateTimePartsComponent(name) {\r\n    var ComponentParts = function (props) {\r\n        var intl = useIntl();\r\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n        var formattedParts = name === 'formatDate'\r\n            ? intl.formatDateToParts(date, formatProps)\r\n            : intl.formatTimeToParts(date, formatProps);\r\n        return children(formattedParts);\r\n    };\r\n    ComponentParts.displayName = DisplayNameParts[name];\r\n    return ComponentParts;\r\n}\r\nexport function createFormattedComponent(name) {\r\n    var Component = function (props) {\r\n        var intl = useIntl();\r\n        var value = props.value, children = props.children, formatProps = __rest(props\r\n        // TODO: fix TS type definition for localeMatcher upstream\r\n        , [\"value\", \"children\"]);\r\n        // TODO: fix TS type definition for localeMatcher upstream\r\n        var formattedValue = intl[name](value, formatProps);\r\n        if (typeof children === 'function') {\r\n            return children(formattedValue);\r\n        }\r\n        var Text = intl.textComponent || React.Fragment;\r\n        return React.createElement(Text, null, formattedValue);\r\n    };\r\n    Component.displayName = DisplayName[name];\r\n    return Component;\r\n}\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { createIntlCache } from '@formatjs/intl';\r\nimport * as React from 'react';\r\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, shallowEqual } from '../utils';\r\nimport { Provider } from './injectIntl';\r\nimport { createIntl } from './createIntl';\r\nfunction processIntlConfig(config) {\r\n    return {\r\n        locale: config.locale,\r\n        timeZone: config.timeZone,\r\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\r\n        formats: config.formats,\r\n        textComponent: config.textComponent,\r\n        messages: config.messages,\r\n        defaultLocale: config.defaultLocale,\r\n        defaultFormats: config.defaultFormats,\r\n        onError: config.onError,\r\n        onWarn: config.onWarn,\r\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\r\n        defaultRichTextElements: config.defaultRichTextElements,\r\n    };\r\n}\r\nvar IntlProvider = /** @class */ (function (_super) {\r\n    __extends(IntlProvider, _super);\r\n    function IntlProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cache = createIntlCache();\r\n        _this.state = {\r\n            cache: _this.cache,\r\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\r\n            prevConfig: processIntlConfig(_this.props),\r\n        };\r\n        return _this;\r\n    }\r\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\r\n        var prevConfig = _a.prevConfig, cache = _a.cache;\r\n        var config = processIntlConfig(props);\r\n        if (!shallowEqual(prevConfig, config)) {\r\n            return {\r\n                intl: createIntl(config, cache),\r\n                prevConfig: config,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    IntlProvider.prototype.render = function () {\r\n        invariantIntlContext(this.state.intl);\r\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\r\n    };\r\n    IntlProvider.displayName = 'IntlProvider';\r\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\r\n    return IntlProvider;\r\n}(React.PureComponent));\r\nexport default IntlProvider;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __assign, __rest, __spreadArray } from \"tslib\";\r\nimport { createIntl as coreCreateIntl, formatMessage as coreFormatMessage, } from '@formatjs/intl';\r\nimport * as React from 'react';\r\nimport { DEFAULT_INTL_CONFIG, assignUniqueKeysToParts } from '../utils';\r\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\r\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\r\n    if (!values) {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (acc, k) {\r\n        var v = values[k];\r\n        acc[k] = isFormatXMLElementFn(v)\r\n            ? assignUniqueKeysToParts(v)\r\n            : v;\r\n        return acc;\r\n    }, {});\r\n}\r\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\r\n    var rest = [];\r\n    for (var _i = 4; _i < arguments.length; _i++) {\r\n        rest[_i - 4] = arguments[_i];\r\n    }\r\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\r\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\r\n        formatters,\r\n        descriptor,\r\n        values], rest, false));\r\n    if (Array.isArray(chunks)) {\r\n        return React.Children.toArray(chunks);\r\n    }\r\n    return chunks;\r\n};\r\n/**\r\n * Create intl object\r\n * @param config intl config\r\n * @param cache cache for formatter instances to prevent memory leak\r\n */\r\nexport var createIntl = function (_a, cache) {\r\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\r\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\r\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\r\n    var resolvedConfig = {\r\n        locale: coreIntl.locale,\r\n        timeZone: coreIntl.timeZone,\r\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\r\n        formats: coreIntl.formats,\r\n        defaultLocale: coreIntl.defaultLocale,\r\n        defaultFormats: coreIntl.defaultFormats,\r\n        messages: coreIntl.messages,\r\n        onError: coreIntl.onError,\r\n        defaultRichTextElements: defaultRichTextElements,\r\n    };\r\n    return __assign(__assign({}, coreIntl), { formatMessage: formatMessage.bind(null, resolvedConfig, \r\n        // @ts-expect-error fix this\r\n        coreIntl.formatters), \r\n        // @ts-expect-error fix this\r\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\r\n};\r\n", "import { __assign, __rest } from \"tslib\";\r\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport { invariant, } from '@formatjs/ecma402-abstract';\r\nimport useIntl from './useIntl';\r\nvar MINUTE = 60;\r\nvar HOUR = 60 * 60;\r\nvar DAY = 60 * 60 * 24;\r\nfunction selectUnit(seconds) {\r\n    var absValue = Math.abs(seconds);\r\n    if (absValue < MINUTE) {\r\n        return 'second';\r\n    }\r\n    if (absValue < HOUR) {\r\n        return 'minute';\r\n    }\r\n    if (absValue < DAY) {\r\n        return 'hour';\r\n    }\r\n    return 'day';\r\n}\r\nfunction getDurationInSeconds(unit) {\r\n    switch (unit) {\r\n        case 'second':\r\n            return 1;\r\n        case 'minute':\r\n            return MINUTE;\r\n        case 'hour':\r\n            return HOUR;\r\n        default:\r\n            return DAY;\r\n    }\r\n}\r\nfunction valueToSeconds(value, unit) {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    switch (unit) {\r\n        case 'second':\r\n            return value;\r\n        case 'minute':\r\n            return value * MINUTE;\r\n        default:\r\n            return value * HOUR;\r\n    }\r\n}\r\nvar INCREMENTABLE_UNITS = [\r\n    'second',\r\n    'minute',\r\n    'hour',\r\n];\r\nfunction canIncrement(unit) {\r\n    if (unit === void 0) { unit = 'second'; }\r\n    return INCREMENTABLE_UNITS.indexOf(unit) > -1;\r\n}\r\nvar SimpleFormattedRelativeTime = function (props) {\r\n    var _a = useIntl(), formatRelativeTime = _a.formatRelativeTime, Text = _a.textComponent;\r\n    var children = props.children, value = props.value, unit = props.unit, otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\r\n    var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\r\n    if (typeof children === 'function') {\r\n        return children(formattedRelativeTime);\r\n    }\r\n    if (Text) {\r\n        return React.createElement(Text, null, formattedRelativeTime);\r\n    }\r\n    return React.createElement(React.Fragment, null, formattedRelativeTime);\r\n};\r\nvar FormattedRelativeTime = function (_a) {\r\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.unit, unit = _c === void 0 ? 'second' : _c, updateIntervalInSeconds = _a.updateIntervalInSeconds, otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\r\n    invariant(!updateIntervalInSeconds ||\r\n        !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\r\n    var _d = React.useState(), prevUnit = _d[0], setPrevUnit = _d[1];\r\n    var _e = React.useState(0), prevValue = _e[0], setPrevValue = _e[1];\r\n    var _f = React.useState(0), currentValueInSeconds = _f[0], setCurrentValueInSeconds = _f[1];\r\n    var updateTimer;\r\n    if (unit !== prevUnit || value !== prevValue) {\r\n        setPrevValue(value || 0);\r\n        setPrevUnit(unit);\r\n        setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\r\n    }\r\n    React.useEffect(function () {\r\n        function clearUpdateTimer() {\r\n            clearTimeout(updateTimer);\r\n        }\r\n        clearUpdateTimer();\r\n        // If there's no interval and we cannot increment this unit, do nothing\r\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\r\n            return clearUpdateTimer;\r\n        }\r\n        // Figure out the next interesting time\r\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\r\n        var nextUnit = selectUnit(nextValueInSeconds);\r\n        // We've reached the max auto incrementable unit, don't schedule another update\r\n        if (nextUnit === 'day') {\r\n            return clearUpdateTimer;\r\n        }\r\n        var unitDuration = getDurationInSeconds(nextUnit);\r\n        var remainder = nextValueInSeconds % unitDuration;\r\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\r\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\r\n            ? prevInterestingValueInSeconds - unitDuration\r\n            : prevInterestingValueInSeconds;\r\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\r\n        if (currentValueInSeconds !== nextInterestingValueInSeconds) {\r\n            updateTimer = setTimeout(function () { return setCurrentValueInSeconds(nextInterestingValueInSeconds); }, delayInSeconds * 1e3);\r\n        }\r\n        return clearUpdateTimer;\r\n    }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\r\n    var currentValue = value || 0;\r\n    var currentUnit = unit;\r\n    if (canIncrement(unit) &&\r\n        typeof currentValueInSeconds === 'number' &&\r\n        updateIntervalInSeconds) {\r\n        currentUnit = selectUnit(currentValueInSeconds);\r\n        var unitDuration = getDurationInSeconds(currentUnit);\r\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\r\n    }\r\n    return (React.createElement(SimpleFormattedRelativeTime, __assign({ value: currentValue, unit: currentUnit }, otherProps)));\r\n};\r\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\r\nexport default FormattedRelativeTime;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar FormattedPlural = function (props) {\r\n    var _a = useIntl(), formatPlural = _a.formatPlural, Text = _a.textComponent;\r\n    var value = props.value, other = props.other, children = props.children;\r\n    var pluralCategory = formatPlural(value, props);\r\n    var formattedPlural = props[pluralCategory] || other;\r\n    if (typeof children === 'function') {\r\n        return children(formattedPlural);\r\n    }\r\n    if (Text) {\r\n        return React.createElement(Text, null, formattedPlural);\r\n    }\r\n    // Work around @types/react where React.FC cannot return string\r\n    return formattedPlural;\r\n};\r\nFormattedPlural.displayName = 'FormattedPlural';\r\nexport default FormattedPlural;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nimport { shallowEqual } from '../utils';\r\nfunction areEqual(prevProps, nextProps) {\r\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\r\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\r\n    return (shallowEqual(nextValues, values) &&\r\n        shallowEqual(otherProps, nextOtherProps));\r\n}\r\nfunction FormattedMessage(props) {\r\n    var intl = useIntl();\r\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\r\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\r\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\r\n    var nodes = formatMessage(descriptor, values, {\r\n        ignoreTag: ignoreTag,\r\n    });\r\n    if (typeof children === 'function') {\r\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\r\n    }\r\n    if (Component) {\r\n        return React.createElement(Component, null, React.Children.toArray(nodes));\r\n    }\r\n    return React.createElement(React.Fragment, null, nodes);\r\n}\r\nFormattedMessage.displayName = 'FormattedMessage';\r\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\r\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\r\nexport default MemoizedFormattedMessage;\r\n", "import { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar FormattedDateTimeRange = function (props) {\r\n    var intl = useIntl();\r\n    var from = props.from, to = props.to, children = props.children, formatProps = __rest(props, [\"from\", \"to\", \"children\"]);\r\n    var formattedValue = intl.formatDateTimeRange(from, to, formatProps);\r\n    if (typeof children === 'function') {\r\n        return children(formattedValue);\r\n    }\r\n    var Text = intl.textComponent || React.Fragment;\r\n    return React.createElement(Text, null, formattedValue);\r\n};\r\nFormattedDateTimeRange.displayName = 'FormattedDateTimeRange';\r\nexport default FormattedDateTimeRange;\r\n", "import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\r\nimport injectIntl, { Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\r\nimport useIntl from './src/components/useIntl';\r\nimport IntlProvider from './src/components/provider';\r\nimport { createIntl } from './src/components/createIntl';\r\nimport FormattedRelativeTime from './src/components/relative';\r\nimport FormattedPlural from './src/components/plural';\r\nimport FormattedMessage from './src/components/message';\r\nimport FormattedDateTimeRange from './src/components/dateTimeRange';\r\nexport { FormattedDateTimeRange, FormattedMessage, FormattedPlural, FormattedRelativeTime, IntlContext, IntlProvider, RawIntlProvider, createIntl, injectIntl, useIntl, };\r\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\r\nexport function defineMessages(msgs) {\r\n    return msgs;\r\n}\r\nexport function defineMessage(msg) {\r\n    return msg;\r\n}\r\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\r\nexport var FormattedDate = createFormattedComponent('formatDate');\r\nexport var FormattedTime = createFormattedComponent('formatTime');\r\nexport var FormattedNumber = createFormattedComponent('formatNumber');\r\nexport var FormattedList = createFormattedComponent('formatList');\r\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\r\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\r\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\r\nexport { FormattedNumberParts, FormattedListParts, } from './src/components/createFormattedComponent';\r\n"],
  "mappings": "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",
  "names": ["React", "React", "DEFAULT_INTL_CONFIG", "React", "DisplayName", "DisplayNameParts", "React", "React", "formatMessage", "createIntl", "DEFAULT_INTL_CONFIG", "IntlProvider", "createIntl", "DEFAULT_INTL_CONFIG", "React", "unitDuration", "React", "React", "formatMessage", "React"]
}

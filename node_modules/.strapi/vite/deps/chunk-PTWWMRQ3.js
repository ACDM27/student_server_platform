import {
  useCallbackRef
} from "./chunk-IIICAW4I.js";
import {
  require_react
} from "./chunk-I3AIFIJ5.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/.pnpm/@strapi+admin@5.18.1_@babel_9f9235ef750f5b793c284d4ca23879d4/node_modules/@strapi/admin/dist/admin/admin/src/hooks/useEnterprise.mjs
var React = __toESM(require_react(), 1);
function isEnterprise() {
  return window.strapi.isEE;
}
var useEnterprise = (ceData, eeCallback, opts = {}) => {
  const { defaultValue = null, combine = (_ceData, eeData) => eeData, enabled = true } = opts;
  const eeCallbackRef = useCallbackRef(eeCallback);
  const combineCallbackRef = useCallbackRef(combine);
  const [{ data }, setData] = React.useState({
    data: isEnterprise() && enabled ? defaultValue : ceData
  });
  React.useEffect(() => {
    async function importEE() {
      const eeData = await eeCallbackRef();
      const combinedValue = combineCallbackRef(ceData, eeData);
      setData({
        data: combinedValue ? combinedValue : eeData
      });
    }
    if (isEnterprise() && enabled) {
      importEE();
    }
  }, [
    ceData,
    eeCallbackRef,
    combineCallbackRef,
    enabled
  ]);
  return data;
};

export {
  useEnterprise
};
//# sourceMappingURL=chunk-PTWWMRQ3.js.map
